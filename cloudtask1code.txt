provider "aws" {
  region = "ap-south-1"
  profile = "myrahul"
}


resource "tls_private_key" "cloudkey" {
  algorithm = "RSA"
  
}
resource "aws_key_pair" "keypair" {
  key_name   = "cloudkey"
  public_key = tls_private_key.cloudkey.public_key_openssh

depends_on = [
tls_private_key.cloudkey
]
}



  




variable "new_key_for_cloudtask1" {
	type = string
	default = "cloudkey"
}

resource "aws_instance"  "myin1" {
  ami           = "ami-07a8c73a650069cf3"
  instance_type = "t2.micro"
  key_name	= aws_key_pair.keypair.key_name
  security_groups =  [ "security_1104" ] 

  tags = {
    Name = "RahulRastogios1"
  }
provisioner "remote-exec"{
  connection {
    type     = "ssh"
    user     = "ec2-user"
    agent    = "false"
    private_key = tls_private_key.cloudkey.private_key_pem
    host     = aws_instance.myin1.public_ip
  }

    inline = [
      "sudo yum install httpd  php git -y",
      "sudo systemctl restart httpd",
      "sudo systemctl enable httpd",
    ]
  }

}


resource "aws_security_group" "security_1104" {
  name        = "security_1104"
  description = "Allow traffic"
  

  ingress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

ingress {
    description = "HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "security_1104"
  }
}

resource "aws_ebs_volume" "esb1" {
  availability_zone = aws_instance.myin1.availability_zone
  size              = 1
  tags = {
    Name = "ebs"
  }
}


resource "aws_volume_attachment" "ebs_att" {
  device_name = "/dev/sdh"
  volume_id   = aws_ebs_volume.esb1.id
  instance_id = aws_instance.myin1.id
  force_detach = true
}


output "myos_ip" {
  value = aws_instance.myin1.public_ip
}



resource "aws_s3_bucket" "bucket" {
	bucket = "cloudtaskbucketofrahul123"
	acl = "private"
    force_destroy = "true"  
    versioning {
		enabled = true
	}
}



resource "null_resource" "local-1"  {
	depends_on = [aws_s3_bucket.bucket,]
	provisioner "local-exec" {
	command = "git clone https://github.com/RahulRastogi1104/cloudimage.git"
  	}
}

resource "aws_s3_bucket_object" "file_upload" {
	depends_on = [aws_s3_bucket.bucket , null_resource.local-1]
	bucket = aws_s3_bucket.bucket.id
    key = "me.jpg"    
	source = "cloudimage/me.jpg"
    acl = "public-read"
}

output "Image" {
  value = aws_s3_bucket_object.file_upload
}







resource "aws_cloudfront_distribution" "distribution" {
	depends_on = [aws_s3_bucket.bucket , null_resource.local-1 ]
	origin {
		domain_name = aws_s3_bucket.bucket.bucket_regional_domain_name
		origin_id   = "S3-cloudtaskbucketofrahul123-id"


		custom_origin_config {
			http_port = 80
			https_port = 80
			origin_protocol_policy = "match-viewer"
			origin_ssl_protocols = ["TLSv1", "TLSv1.1", "TLSv1.2"]
		}
	}
 
	enabled = true
  
	default_cache_behavior {
		allowed_methods = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		cached_methods = ["GET", "HEAD"]
		target_origin_id = "S3-cloudtaskbucketofrahul123-id"
 
		forwarded_values {
			query_string = false
 
			cookies {
				forward = "none"
			}
		}
		viewer_protocol_policy = "allow-all"
		min_ttl = 0
		default_ttl = 3600
		max_ttl = 86400
	}
 
	restrictions {
		geo_restriction {
 
			restriction_type = "none"
		}
	}
 
	viewer_certificate {
		cloudfront_default_certificate = true
	}
}



output "domain-name" {
	value = aws_cloudfront_distribution.distribution.domain_name
}






resource "null_resource" "nulllocal2"  {
	provisioner "local-exec" {
	    command = "echo  ${aws_instance.myin1.public_ip} > publicip.txt"
  	}
}



resource "null_resource" "nullremote3"  {

depends_on = [
    aws_volume_attachment.ebs_att,
  ]


  connection {
    type     = "ssh"
    user     = "ec2-user"
    private_key = tls_private_key.cloudkey.private_key_pem
    host     = aws_instance.myin1.public_ip
  }

provisioner "remote-exec" {
    inline = [
      "sudo mkfs.ext4  /dev/xvdh",
      "sudo mount  /dev/xvdh  /var/www/html",
      "sudo rm -rf /var/www/html/*",
      "sudo git clone https://github.com/RahulRastogi1104/cloudcode.git /var/www/html/"
    ]
  }
}



resource "null_resource" "nulllocal1"  {


depends_on = [
    null_resource.nullremote3,
  ]

	provisioner "local-exec" {
	    command = "start chrome  ${aws_instance.myin1.public_ip}"
  	}
}


